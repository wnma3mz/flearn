name: build
on:
  push:
    branches:
      - master
jobs:
  build:
    runs-on: ubuntu-18.04
    strategy:
      matrix:
        python-version: [3.6, 3.7, 3.8]
      fail-fast: false

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Get pip cache dir
        id: pip-cache
        run: |
          echo "::set-output name=dir::$(pip cache dir)"
      - name: pip cache
        uses: actions/cache@v2
        with:
          path: ${{ steps.pip-cache.outputs.dir }}
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          python setup.py sdist bdist_wheel
          pip install dist/flearn-0.0.1.tar.gz

      - name: Test
        id: test
        run: |
          cd test/
          python test_pipline.py
          cd client 
          python test_DLClient.py
          cd ../common
          python test_trainer.py
          cd ../server
          python test_communicator.py
          echo "::set-output name=status::success"

      - name: version
        id: version
        run: echo "::set-output name=version::$(python -c 'import flearn; print(flearn.__version__)')"

      # 删除已有的release
      - name: delete_release
        id: delete_release
        uses: dev-drprasad/delete-tag-and-release@v0.2.0
        # 限定版本为3.7时才运行操作
        if: matrix.python-version == '3.7' && steps.test.outputs.status == 'success'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          delete_release: true # default: false
          tag_name: ${{ steps.version.outputs.version }} # tag name to delete

      # 创建新的版本release
      - name: create_release
        id: create_release
        uses: actions/create-release@v1
        if: matrix.python-version == '3.7' && steps.test.outputs.status == 'success'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.version.outputs.version }}
          release_name: ${{ steps.version.outputs.version }}
          draft: false
          prerelease: false

      # 上传新编译好的文件
      - name: upload-release-tar-gz
        id: upload-release-tar-gz
        uses: actions/upload-release-asset@v1
        if: matrix.python-version == '3.7' && steps.test.outputs.status == 'success'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./dist/flearn-${{ steps.version.outputs.version }}.tar.gz
          asset_name: flearn-${{ steps.version.outputs.version }}.tar.gz
          asset_content_type: application/gzip

      - name: upload-release-whl
        id: upload-release-whl
        uses: actions/upload-release-asset@v1
        if: matrix.python-version == '3.7' && steps.test.outputs.status == 'success'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./dist/flearn-${{ steps.version.outputs.version }}-py3-none-any.whl
          asset_name: flearn-${{ steps.version.outputs.version }}.whl
          asset_content_type: application/zip
